"""
Attempted to work backwards from a github project
It's not working, so I'm starting from scratch
But I wanted to leave this here because I may come back and try to fix it once I'm better at this

9:46 am 11/16/18
"""

from tkinter import * #analysis:ignore
from tkinter import filedialog
from tkinter import messagebox
import pandas as pd
import xlrd
import xlwt
import os
import numpy as np

#can import tkinter as tk and add tk to tkinter commands instead of comment on undefined commands
target_columns = 0, 6, 24, 25, 26, 33

def sort_by_value(d):
    items = d.items() #item(s) are 'integers', may not work
    return items

my_filetypes = [("excel files", "*.xls"), ("excel files", "*.xlsx"), ("all files", "*.*")]

def import_excel():
    import_excel_name = filedialog.askopenfilename(initialdir=os.getcwd(), 
                                                   title="Please select file:",
                                                   filetypes=my_filetypes)
                                                   
    book = pd.read_excel(import_excel_name)
    sheet = book.parse("Sheet1") #error
    sheet = sheet.sort(columns="Subj+Trial")
    if i == 0 | j == 0: #'i and j'
        messagebox.showerror("File format error", "File is empty！")
        return
#removed 'mdict{}'
    for i in range(nrows): #need to be defined because they reappear here
        for j in range(ncols):
            cell = table.cell(i, j).value #cell definition, what is this telling me?
            if cell != '':
             cell.write(target_columns, 1, row[1])#write output code, how do I select 
            elif cell == 0:
              messagebox.showinfo ("Bad Trial")
#removed 'sortedlist' bc should be sorted above
    for item in sheet:
      listbox.insert(END, np.array(item[:]))
      listbox.pack(fill=BOTH, expand=1) #analysis:ignore
    scrollbar.config(command=listbox.yview)


def save_result():
    save_text_name = filedialog.asksaveasfilename(initialdir="/", title="Save file",
                                                  filetypes=(("text files", "*.txt"), ("all files", "*.*")))
    if save_text_name == '':
        return
    if not save_text_name.endswith('.txt'):
        save_text_name += '.txt'
    f = open(save_text_name, W) #analysis:ignore
    content = ''
    for item in sortedlist:
        content += item[1]+','+item[0] + '\r\n'
    f.write(content)


def show_help():
    messagebox.showinfo("Instructions for use", "Import statistics excel document，Count the number of occurrences of each cell for sheet 0，Reverse order，The result is displayed in the window，It can also be saved to a specified file.")

def show_about():
    messagebox.showinfo("on", "This code was adapted by Anna. If you need help with it, well so do I.")

def init_menu():
    menu_bar = Menu(root) #analysis:ignore
    file_menu = Menu(menu_bar, tearoff=0) #analysis:ignore
    file_menu.add_command(label="Import excel", command=import_excel)
    file_menu.add_command(label="Save result to:", command=save_result)
    file_menu.add_separator()
    file_menu.add_command(label="drop out", command=root.quit)
    menu_bar.add_cascade(label="operating", menu=file_menu)

    help_menu = Menu(menu_bar, tearoff=0) #analysis:ignore
    help_menu.add_command(label="Instructions for use", command=show_help)
    help_menu.add_separator()
    help_menu.add_command(label="on", command=show_about)
    menu_bar.add_cascade(label="Help", menu=help_menu)
    root.config(menu=menu_bar)


root = Tk() #analysis:ignore
init_menu()
scrollbar = Scrollbar(root) #analysis:ignore
scrollbar.pack(side=RIGHT, fill=Y) #analysis:ignore
listbox = Listbox(root, yscrollcommand=scrollbar.set) #analysis:ignore
root.geometry('800x600+500+200')
root.title('Excel analysis tool')
mainloop() #analysis:ignore
